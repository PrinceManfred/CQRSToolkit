using System;
using System.Collections.Generic;
using System.Reflection;
using System.Text;

namespace CQRSToolkit.DependencyInjection.Generator
{
    internal static class SourceTemplate
    {
        const string _template = "// <auto-generated/>\n" +
                                 "using System.CodeDom.Compiler;\n\n" +
                                 "namespace {0}\n" +
                                 "{{\n" +
                                 "\t[GeneratedCode(\"{1}\", \"{2}\")]\n" +
                                 "\t{3} static partial class {4}\n" +
                                 "\t{{\n" +
                                 "\t\t{5} static partial Microsoft.Extensions.DependencyInjection.IServiceCollection {6}(this Microsoft.Extensions.DependencyInjection.IServiceCollection {7}, Microsoft.Extensions.DependencyInjection.ServiceLifetime {8})\n" +
                                 "\t\t{{\n" +
                                 "{9}\n" +
                                 "\t\t\treturn {7};\n" +
                                 "\t\t}}\n" +
                                 "\t}}\n" +
                                 "}}";

        const string _templateClosed = "// <auto-generated/>\n" +
                                 "using System.CodeDom.Compiler;\n\n" +
                                 "namespace {0}\n" +
                                 "{{\n" +
                                 "\t[GeneratedCode(\"{1}\", \"{2}\")]\n" +
                                 "\t{3} static class {4}\n" +
                                 "\t{{\n" +
                                 "\t\t{5} static Microsoft.Extensions.DependencyInjection.IServiceCollection {6}(this Microsoft.Extensions.DependencyInjection.IServiceCollection {7}, Microsoft.Extensions.DependencyInjection.ServiceLifetime {8})\n" +
                                 "\t\t{{\n" +
                                 "{9}\n" +
                                 "\t\t\treturn {7};\n" +
                                 "\t\t}}\n" +
                                 "\t}}\n" +
                                 "}}";

        internal static string GenerateSource(string outNamespace, string classAccessModifier, string className,
            string methodAccessModifier, string methodName, string servicesParam, string lifetimeParam, string injections, bool isPartial = true)
        {
            return string.Format(isPartial ? _template : _templateClosed,
                outNamespace,
                Assembly.GetExecutingAssembly().GetName().Name,
                Assembly.GetExecutingAssembly().GetName().Version,
                classAccessModifier,
                className,
                methodAccessModifier,
                methodName,
                servicesParam,
                lifetimeParam,
                injections);
        }
    }
}